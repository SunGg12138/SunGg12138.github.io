webpackJsonp([1],{"2AgZ":function(i,t){},NHnr:function(i,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e("/5sW"),s={render:function(){var i=this.$createElement,t=this._self._c||i;return t("div",{attrs:{id:"app"}},[t("router-view")],1)},staticRenderFns:[]};var o=e("VU/8")({name:"App"},s,!1,function(i){e("o8nZ")},null,null).exports,d=e("/ocq"),a={render:function(){var i=this,t=i.$createElement,e=i._self._c||t;return e("div",{staticClass:"timeline"},[e("el-container",[e("el-aside",{attrs:{width:"200px"}},[e("el-menu",{attrs:{"default-active":i.view_year},on:{select:i.handelSelect}},i._l(i.$timeline_years,function(t){return e("el-menu-item",{key:t,attrs:{index:t}},[e("span",{attrs:{slot:"title"},domProps:{textContent:i._s(t)},slot:"title"})])}),1)],1),i._v(" "),e("el-main",[e("el-timeline",i._l(i.timelines,function(t,n){return e("el-timeline-item",{key:n,attrs:{timestamp:t.timestamp,placement:"top",type:t.type||"success"}},[e("el-card",[e("h4",{domProps:{textContent:i._s(t.title)}}),i._v(" "),t.caption?e("p",{domProps:{innerHTML:i._s(t.caption)}}):i._e(),i._v(" "),t.list?e("el-collapse",{attrs:{accordion:""}},i._l(t.list,function(t,n){return e("el-collapse-item",{key:n,attrs:{title:"- "+t.title,name:n}},[e("div",{staticStyle:{color:"#303133","font-size":"13px"},domProps:{innerHTML:i._s(t.detail)}})])}),1):i._e()],1)],1)}),1)],1)],1)],1)},staticRenderFns:[]};var l=e("VU/8")({name:"Timeline",data:function(){return{view_year:"2017"}},computed:{timelines:function(){return this.$timeline[this.view_year]}},methods:{handelSelect:function(i){this.view_year=i}}},a,!1,function(i){e("2AgZ")},null,null).exports;n.default.use(d.a);var c=new d.a({routes:[{path:"/",name:"Timeline",component:l}]}),m=e("4DWU"),p=e.n(m),r=(e("epTE"),e("fZjL")),g=e.n(r),v={2009:[{timestamp:"2009/03",title:"Node.js 有了自己的名字",caption:'\n        <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/1.png" />\n      '},{timestamp:"2009/10",title:"Isaac Schlueter 首次提出了 npm",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/2.png" />\n      '},{timestamp:"2009/11",title:"Ryan Dahl （Node.js 之父）首次公开宣讲 Node.js",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/3.png" />\n      '}],2010:[{timestamp:"2010/04",title:"Heroku（国外很有名的 PaaS 平台）首次实验性尝试对 Node.js 进行支持",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/4.png" />\n      '},{timestamp:"2010/07",title:"Ryan Dahl 在 Google 技术交流会上再次宣讲 Node.js",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/5.png" />\n      '},{timestamp:"2010/08",title:"Node.js 0.2.0 发布",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/6.png" />\n      '}],2011:[{timestamp:"2011/03",title:"Felix 的 Node.js 指南发布",caption:'\n      <div>其实是几篇指南性质的文章，但这在当时是非常宝贵的资料。</div>\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/7.png" />\n      '},{timestamp:"2011/05",title:"NPM 1.0 发布",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/8.png" />\n      '},{timestamp:"2011/05",title:"Ryan Dahl 在 Reddit 发帖接受任何关于 Node.js 的提问",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/9.png" />\n      '},{timestamp:"2011/07",title:"The Node Beginner Book 发行",caption:'\n      <p>当时 Node.js 的入门书籍很少很少，这本书写的也很不错，很有名。</p>\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/10.png" />\n      '}],2012:[{timestamp:"2012/01",title:"Ryan Dahl 宣布不再参与 Node.js 日常开发和维护工作，Isaac Schlueter 接任",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/11.png" />\n      '},{timestamp:"2012/06",title:"Node.js v0.8.0 稳定版发布",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/12.png" />\n      '}],2013:[{timestamp:"2013/11",title:"沃尔玛线上用 Node.js 过程中发现了 Node.js 内存泄漏问题",caption:'\n      <p>当时是用 Node.js 在黑色星期五来扛沃尔玛的线上产品，然后发现了这个问题。当时在 Twitter 还有实时的监控数据，它是由 Node.js 核心代码中一个遗漏的声明引发的血案，工程师们花了好几个星期去排查并最终得以解决。</p>\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/13.png" />\n      '}],2014:[{timestamp:"2014/01",title:"TJ Fontaine 接管 Node 项目",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/14.png" />\n      '},{timestamp:"2014/10",title:"Joyent 和社区成员提议成立 Node.js 顾问委员会",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/15.png" />\n      '},{timestamp:"2014/11",title:"IO.js 项目创立",caption:'\n      <p>由于对 Joyent 拽着 Node.js 的商标权以及龟速的开发进度不满，社区活跃的成员 fork 出了这个项目。</p>\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/16.png" />\n      '}],2015:[{timestamp:"2015/01",title:"IO.js 1.0.0 发布",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/17.png" />\n      '},{timestamp:"2015/02",title:"Joyent 携手各大公司和 Linux 基金会成立 Node.js 基金会",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/18.png" />\n      '},{timestamp:"2015/02",title:"提议 IO.js 和 Node.js 和解",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/18.png" />\n      '},{timestamp:"2015/05",title:"TJ Fontaine “下台” 并离开 Joyent （著名的 he/she 事件）",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/19.png" />\n      '},{timestamp:"2015/05",title:"Node.js 和 IO.js 合并，隶属 Node.js 基金会",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/20.png" />\n      '},{timestamp:"2015/08",title:"宣布 Node.js 4.0 就是最新的 1.0，也就是 4.0 代表了一个新的开始",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/21.png" />\n      '},{timestamp:"2015/10",title:"首个 LTS（长期支持） 版本 v4.2.0 发布",caption:'\n      <img width="220" src="https://sunjg.oss-cn-beijing.aliyuncs.com/node-timeline/22.png" />\n      '},{timestamp:"2015/10",title:"Node v5.0.0 正式发布",caption:"\n      <p>npm 版本 升级到 3.3.6</p>\n      <p>v8 版本 升级到 4.6.85.25</p>\n      ",list:[{title:"Buffer",detail:"\n          <div>删除 'raw' 和 'raws' 编码类型，这些编码类型已被弃用很长时间了</div>\n          "},{title:"console",detail:"\n          <div>现在，console.time()报告的值添加了小数点后三位的精度</div>\n          "},{title:"fs",detail:"\n          <div>1. fs.readFile *()，fs.writeFile *()和fs.appendFile *()现在也接受文件描述符作为它们的第一个参数</div>\n          <div>2. 在fs.readFile()中，如果指定了编码并且内部toString()失败，则不再抛出错误，而是将其传递给回调</div>\n          <div>3. 在fs.read()中（使用fs.read(fd, length, position, encoding, callback)形式），如果内部toString()失败，则不再抛出错误，而是将其传递给回调</div>\n          "},{title:"http",detail:'\n          <div>1. 修复了HTTP请求流会暂停的错误</div>\n          <div>2. 解析HTTP时，请勿重复添加以下header：Retry-After，ETag，Last-Modified，Server，Age，Expires。 以下是已阻止重复添加的header：Content-Type，Content-Length，User-Agent，Referer，Host，Authorization，Proxy-Authorization，If-Modified-Since，If-Unmodified-Since，From，Location ，Max-Forwards</div>\n          <div>3. setTimeout()的回调参数必须是一个函数否则抛出TypeError</div>\n          <div>4. HTTP method 和 header 名称现在必须符合RFC 2616 "token" 规则，就是不包括控制字符和许多分隔符。具体来说，必须匹配<code>/^[a-zA-Z0-9_!#$%&\'*+.^`~~-]+$/</code>，否则将抛出TypeError</div>\n          '},{title:"zlib",detail:"\n          <div>现在，解压缩将被截断的输入（例如，文件意外结束）</div>\n          "}]}],2016:[{timestamp:"2016/04/26",title:"Node v6.0.0 正式发布",list:[{title:"Buffer",detail:"\n          <div>添加新的Buffer构造函数</div>\n          <div>已删除了先前不推荐使用的缓冲区API</div>\n          <div>改进的错误处理</div>\n          <div>添加Buffer.prototype.lastIndexOf()方法</div>\n          "},{title:"Cluster",detail:"\n          <div>Worker emitted as first argument in 'message' 事件</div>\n          <div>worker.exitedAfterDisconnect属性替换了worker.suicide</div>\n          "}]},{timestamp:"2016/10/25",title:"Node v7.0.0 正式发布"}],2017:[{timestamp:"2017/05/30",title:"Node.js v8.0.0 正式发布，带来大量更新",list:[{title:"Npm 最近宣布发布了 5.0.0 版本",detail:'\n          <div style="margin-bottom: 8px;">主要更新：</div>\n          <div>1. 新增 package-lock.json 来记录依赖树信息，进行依赖锁定，并使用新的 shrinkwrap 格式，有点yarn的味道</div>\n          <div>2. 不能再通过修改package.json 文件然后执行npm install 来安装依赖，需要使用npm install xxx@yy安装</div>\n          <div>3. --save 变成了默认参数，执行 install 依赖包时默认都会带上，除非加上 --no-save。</div>\n          <div>4. 提升了安装速度，增加了并发</div>\n          <div style="margin: 8px 0;">升级npm版本后遇到的问题：</div>\n          <div>直接改 package.json 文件相应模块的版本号，再执行npm install不会更新了，你只能手动用npm install xxx@yy指定版本号来安装，然后它会自动更新 package-lock.json 文件。\n          如果需要改 package.json 文件，执行npm install时，可以先把package-lock.json 删除，执行npm install</div>\n          '},{title:"Node.js 8.0.0 使用了 V8 的 5.8 版本",detail:'\n          <div style="text-indent: 2em;">\n            <div>这是对JavaScript运行时的一次重大更新，包括性能和面向开发人员的api的重大改进。对于Node.js开发人员来说，最重要的是V8 5.8保证了与v8 5.9和即将推出的V8 6.0的前向ABI兼容性，这将有助于确保Node.js本机插件生态系统的稳定性。在Node.js 8的生命周期中，我们计划迁移到5.9甚至6.0。</div>\n            <div>V8 5.8引擎还有助于建立到新的TurboFan+ Ignition管道的挂起转换，这将为所有Node.js应用程序提供重要的新性能优化。尽管它们已经存在于V8的早期版本中，但TurboFan 和 Ignition将在V8 5.9中首次默认启用。新的编译器管道代表了如此重大的变化，Node.js核心技术委员会（CTC）选择推迟原定于4月份发布的Node.js 8，以便更好地适应它。</div>\n          </div>\n          '},{title:"Node.js API (N-API)",detail:"\n          <div>\n            <div>1. 对于使用或创建原生插件的 Node.js 开发者，新的实验性的 Node.js API（N-API）对于现有的 Native Abstractions for Node.js (nan) 来说是一个重大的改进，它将允许原生插件在一个系统上编译一次，并在多个版本的 Node.js 上使用。</div>\n            <div>2. 通过提供一个新的虚拟机不可知的应用程序二进制接口（ABI），原生插件不仅可以在多个版本的 V8 JavaScript 运行时上运行，还可以在微软的 Chakra-Core 运行时上使用。</div>\n            <div>3. N-API 在 Node.js 8.0.0 中是实验性的功能</div>\n          </div>\n          "},{title:"更多",detail:'\n          <div>\n            <div>1. async_hooks模块（以前的async_wrap）得到了重大升级</div>\n            <div>2. 完全支持 WHATWG URL 解析器</div>\n            <div>3. Buffer API做了许多重要的更改</div>\n            <div>4. Pending Deprecations</div>\n            <div>5. 新的util.promisify() API</div>\n            <div>6. Console 修改</div>\n            <div><a href="https://nodejs.org/en/blog/release/v8.0.0">查看详情</a></div>\n          </div>\n          '}]},{timestamp:"2017/10/31",title:"Node.js v9.0.0 正式发布"}],2018:[{timestamp:"2018/04/24",title:"Node.js v10.0.0 正式发布"},{timestamp:"2018/10/23",title:"Node.js v11.0.0 正式发布"}],2019:[{timestamp:"2019/04/23",title:"Node.js v12.0.0 正式发布"},{timestamp:"2019/10/22",title:"Node.js v13.0.0 正式发布"}],2020:[{timestamp:"2019/04/22",title:"Node.js v14.0.0 正式发布"},{timestamp:"2019/10",type:"warning",title:"Node.js v15.0.0 预计发布"}]},u={install:function(i){i.prototype.$timeline=v,i.prototype.$timeline_years=g()(v)}};n.default.config.productionTip=!1,n.default.use(p.a),n.default.use(u),new n.default({el:"#app",router:c,render:function(i){return i(o)}})},epTE:function(i,t){},o8nZ:function(i,t){}},["NHnr"]);
//# sourceMappingURL=app.e7f850383088b6eaec40.js.map